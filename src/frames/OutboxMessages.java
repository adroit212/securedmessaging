/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package frames;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.JOptionPane;
import resources.ConnectDB;
import resources.ListRenderer;

/**
 *
 * @author Ephraim
 */
public class OutboxMessages extends javax.swing.JFrame {

    private String hm_uid, hm_fn;
    private String[] msg_lists, msg_IDs;

    /**
     * Creates new form OutboxMessages
     *
     * @param hm_fn
     * @param hm_uid
     */
    public OutboxMessages(String hm_fn, String hm_uid) {
        initComponents();
        this.hm_uid = hm_uid;
        this.hm_fn = hm_fn;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        message_list = new javax.swing.JList<>();
        jPanel5 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        hm_home_item = new javax.swing.JMenu();
        hm_msg_menu = new javax.swing.JMenu();
        hm_send_msg = new javax.swing.JMenuItem();
        hm_view_msg = new javax.swing.JMenuItem();
        hm_view_msg2 = new javax.swing.JMenuItem();
        hm_actions = new javax.swing.JMenu();
        hm_logout = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Secured Desktop Messaging System");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jPanel2.setBackground(new java.awt.Color(13, 20, 28));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel1.setText("Inbox Messages");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 781, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 44, Short.MAX_VALUE)
        );

        message_list.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        message_list.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        message_list.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        message_list.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                message_listValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(message_list);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 305, Short.MAX_VALUE)
        );

        jPanel5.setBackground(new java.awt.Color(13, 20, 28));

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel6.setText("Secured Desktop Messaging System. 2021 All Rights Reserved.");

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 791, Short.MAX_VALUE)
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 53, Short.MAX_VALUE)
        );

        hm_home_item.setText("Home");
        hm_home_item.setToolTipText("");
        hm_home_item.setMargin(new java.awt.Insets(5, 2, 5, 2));
        hm_home_item.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                hm_home_itemMouseClicked(evt);
            }
        });
        jMenuBar1.add(hm_home_item);

        hm_msg_menu.setText("Messages");
        hm_msg_menu.setMargin(new java.awt.Insets(5, 0, 5, 0));

        hm_send_msg.setText("Send Message");
        hm_send_msg.setMargin(new java.awt.Insets(5, 0, 5, 0));
        hm_send_msg.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                hm_send_msgMouseClicked(evt);
            }
        });
        hm_send_msg.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hm_send_msgActionPerformed(evt);
            }
        });
        hm_msg_menu.add(hm_send_msg);

        hm_view_msg.setText("Inbox Messages");
        hm_view_msg.setMargin(new java.awt.Insets(5, 0, 5, 0));
        hm_view_msg.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hm_view_msgActionPerformed(evt);
            }
        });
        hm_msg_menu.add(hm_view_msg);

        hm_view_msg2.setText("Outbox Messages");
        hm_view_msg2.setEnabled(false);
        hm_view_msg2.setMargin(new java.awt.Insets(5, 0, 5, 0));
        hm_view_msg2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hm_view_msg2ActionPerformed(evt);
            }
        });
        hm_msg_menu.add(hm_view_msg2);

        jMenuBar1.add(hm_msg_menu);

        hm_actions.setText("Actions");
        hm_actions.setMargin(new java.awt.Insets(5, 2, 5, 0));
        hm_actions.addMenuListener(new javax.swing.event.MenuListener() {
            public void menuCanceled(javax.swing.event.MenuEvent evt) {
            }
            public void menuDeselected(javax.swing.event.MenuEvent evt) {
            }
            public void menuSelected(javax.swing.event.MenuEvent evt) {
                hm_actionsMenuSelected(evt);
            }
        });
        hm_actions.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                hm_actionsMouseClicked(evt);
            }
        });

        hm_logout.setText("Logout");
        hm_logout.setMargin(new java.awt.Insets(5, 0, 5, 0));
        hm_logout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hm_logoutActionPerformed(evt);
            }
        });
        hm_actions.add(hm_logout);

        jMenuBar1.add(hm_actions);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addContainerGap()))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 319, Short.MAX_VALUE)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(51, 51, 51)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(60, Short.MAX_VALUE)))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void hm_home_itemMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_hm_home_itemMouseClicked
        // TODO add your handling code here:
        String[] args = {hm_uid, hm_fn};
        HomeForm.main(args);
        this.dispose();
    }//GEN-LAST:event_hm_home_itemMouseClicked

    private void hm_send_msgMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_hm_send_msgMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_hm_send_msgMouseClicked

    private void hm_send_msgActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hm_send_msgActionPerformed
        // TODO add your handling code here:
        String[] args = {hm_uid, hm_fn};
        SendMessageForm.main(args);
        this.dispose();
    }//GEN-LAST:event_hm_send_msgActionPerformed

    private void hm_view_msgActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hm_view_msgActionPerformed
        // TODO add your handling code here:
        String[] args = {hm_uid, hm_fn};
        InboxMessages.main(args);
        this.dispose();
    }//GEN-LAST:event_hm_view_msgActionPerformed

    private void hm_view_msg2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hm_view_msg2ActionPerformed
        // TODO add your handling code here:
        /*String[] args = {hm_uid, hm_fn};
        OutboxMessages.main(args);
        this.dispose();*/
    }//GEN-LAST:event_hm_view_msg2ActionPerformed

    private void hm_logoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hm_logoutActionPerformed
        // TODO add your handling code here:
        int exit_answer = JOptionPane.showConfirmDialog(this, "Are you sure to "
                + "logout?", "Confirm", JOptionPane.YES_NO_OPTION);
        if (exit_answer == 0) {
            LoginForm lf = new LoginForm();
            lf.setVisible(true);
            this.dispose();
        }
    }//GEN-LAST:event_hm_logoutActionPerformed

    private void hm_actionsMenuSelected(javax.swing.event.MenuEvent evt) {//GEN-FIRST:event_hm_actionsMenuSelected
        // TODO add your handling code here:
    }//GEN-LAST:event_hm_actionsMenuSelected

    private void hm_actionsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_hm_actionsMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_hm_actionsMouseClicked

    private void message_listValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_message_listValueChanged
        // TODO add your handling code here:
        int selected_index = message_list.getSelectedIndex();
        String selected_ID = msg_IDs[selected_index];

        String[] args = {hm_uid, hm_fn, selected_ID};
        Message.main(args);
        this.dispose();
    }//GEN-LAST:event_message_listValueChanged

    private int countInbox() {
        try {
            ConnectDB connDB = new ConnectDB();
            Connection conn = connDB.getConnection();
            String msg_tbl = connDB.MESSAGES_TABLE;
            String query = "SELECT count(*) as 'total' FROM " + msg_tbl + " WHERE sender=?";
            PreparedStatement ps = conn.prepareStatement(query);
            ps.setString(1, hm_uid);
            ResultSet rs = ps.executeQuery();

            //get result count
            int total_rows = 0;
            while (rs.next()) {
                total_rows = Integer.parseInt(rs.getString("total"));
            }
            conn.close();

            return total_rows;
        } catch (SQLException e) {
            System.out.println(e.getMessage());
        }
        return 0;
    }

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        // TODO add your handling code here:
        //get all messages from Database
        try {
            int total_rows = countInbox();

            ConnectDB connDB = new ConnectDB();
            Connection conn = connDB.getConnection();
            String msg_tbl = connDB.MESSAGES_TABLE;
            String query = "SELECT * FROM " + msg_tbl + " WHERE sender=?";
            PreparedStatement ps = conn.prepareStatement(query);
            ps.setString(1, hm_uid);
            ResultSet rs = ps.executeQuery();

            this.msg_lists = new String[total_rows];
            this.msg_IDs = new String[total_rows];
            int cnt_index = 0;

            while (rs.next()) {
                String msg_id = rs.getString("msg_id");
                String reciever = rs.getString("reciever");
                String send_date = rs.getString("send_date");
                String read_status = rs.getString("read_status");
                //String formated_result = sender + " : " + send_date + " (" + read_status + ")";
                String formated_result = reciever + " : " + send_date;

                this.msg_lists[cnt_index] = formated_result;
                this.msg_IDs[cnt_index] = msg_id;
                cnt_index++;
            }

            //creating and adding components to list
            message_list.removeAll();
            ListRenderer renderer = new ListRenderer();
            message_list.setListData(msg_lists);
            message_list.setCellRenderer(renderer);
            conn.close();

        } catch (SQLException e) {
            System.out.println(e.getMessage());
        }
    }//GEN-LAST:event_formWindowOpened

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(OutboxMessages.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(OutboxMessages.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(OutboxMessages.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(OutboxMessages.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new OutboxMessages(args[1], args[0]).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenu hm_actions;
    private javax.swing.JMenu hm_home_item;
    private javax.swing.JMenuItem hm_logout;
    private javax.swing.JMenu hm_msg_menu;
    private javax.swing.JMenuItem hm_send_msg;
    private javax.swing.JMenuItem hm_view_msg;
    private javax.swing.JMenuItem hm_view_msg2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JList<String> message_list;
    // End of variables declaration//GEN-END:variables
}

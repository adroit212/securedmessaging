/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package frames;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.JOptionPane;
import resources.AlgorithmAES;
import resources.ConnectDB;

/**
 *
 * @author Ephraim
 */
public class SendMessageForm extends javax.swing.JFrame {

    private final String hm_uid, hm_fn;

    /**
     * Creates new form SendMessageForm
     *
     * @param hm_fn
     * @param hm_uid
     */
    public SendMessageForm(String hm_fn, String hm_uid) {
        initComponents();
        this.hm_uid = hm_uid;
        this.hm_fn = hm_fn;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel3 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        smf_sender = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        smf_rcv = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        smf_message = new javax.swing.JTextPane();
        jButton1 = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        hm_home_item = new javax.swing.JMenu();
        hm_msg_menu = new javax.swing.JMenu();
        hm_send_msg = new javax.swing.JMenuItem();
        hm_view_msg = new javax.swing.JMenuItem();
        hm_view_msg2 = new javax.swing.JMenuItem();
        hm_actions = new javax.swing.JMenu();
        hm_logout = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Secured Desktop Messaging System");
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jPanel3.setBackground(new java.awt.Color(13, 20, 28));

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("Secured Desktop Messaging System. 2021 All Rights Reserved.");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, 781, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 53, Short.MAX_VALUE)
        );

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel1.setText("Sender:");

        smf_sender.setEnabled(false);

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel2.setText("Reviever");

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel3.setText("Message");

        jScrollPane1.setViewportView(smf_message);

        jButton1.setBackground(new java.awt.Color(36, 38, 123));
        jButton1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jButton1.setForeground(new java.awt.Color(255, 255, 255));
        jButton1.setText("Send Message");
        jButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton1MouseClicked(evt);
            }
        });

        hm_home_item.setText("Home");
        hm_home_item.setToolTipText("");
        hm_home_item.setMargin(new java.awt.Insets(5, 2, 5, 2));
        hm_home_item.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                hm_home_itemMouseClicked(evt);
            }
        });
        hm_home_item.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hm_home_itemActionPerformed(evt);
            }
        });
        jMenuBar1.add(hm_home_item);

        hm_msg_menu.setText("Messages");
        hm_msg_menu.setMargin(new java.awt.Insets(5, 0, 5, 0));

        hm_send_msg.setText("Send Message");
        hm_send_msg.setEnabled(false);
        hm_send_msg.setMargin(new java.awt.Insets(5, 0, 5, 0));
        hm_send_msg.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                hm_send_msgMouseClicked(evt);
            }
        });
        hm_send_msg.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hm_send_msgActionPerformed(evt);
            }
        });
        hm_msg_menu.add(hm_send_msg);

        hm_view_msg.setText("Inbox Messages");
        hm_view_msg.setMargin(new java.awt.Insets(5, 0, 5, 0));
        hm_view_msg.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hm_view_msgActionPerformed(evt);
            }
        });
        hm_msg_menu.add(hm_view_msg);

        hm_view_msg2.setText("Outbox Messages");
        hm_view_msg2.setMargin(new java.awt.Insets(5, 0, 5, 0));
        hm_view_msg2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hm_view_msg2ActionPerformed(evt);
            }
        });
        hm_msg_menu.add(hm_view_msg2);

        jMenuBar1.add(hm_msg_menu);

        hm_actions.setText("Actions");
        hm_actions.setMargin(new java.awt.Insets(5, 2, 5, 0));
        hm_actions.addMenuListener(new javax.swing.event.MenuListener() {
            public void menuCanceled(javax.swing.event.MenuEvent evt) {
            }
            public void menuDeselected(javax.swing.event.MenuEvent evt) {
            }
            public void menuSelected(javax.swing.event.MenuEvent evt) {
                hm_actionsMenuSelected(evt);
            }
        });
        hm_actions.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                hm_actionsMouseClicked(evt);
            }
        });

        hm_logout.setText("Logout");
        hm_logout.setMargin(new java.awt.Insets(5, 0, 5, 0));
        hm_logout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hm_logoutActionPerformed(evt);
            }
        });
        hm_actions.add(hm_logout);

        jMenuBar1.add(hm_actions);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 241, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(smf_sender)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(smf_rcv)
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 742, Short.MAX_VALUE))
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(4, 4, 4)
                .addComponent(smf_sender, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(smf_rcv, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, 43, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void hm_send_msgMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_hm_send_msgMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_hm_send_msgMouseClicked

    private void hm_send_msgActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hm_send_msgActionPerformed
        // TODO add your handling code here:
        /*String[] args = {hm_uid, hm_fn};
        SendMessageForm.main(args);
        this.dispose();*/
    }//GEN-LAST:event_hm_send_msgActionPerformed

    private void hm_logoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hm_logoutActionPerformed
        // TODO add your handling code here:
        int exit_answer = JOptionPane.showConfirmDialog(this, "Are you sure to "
                + "logout?", "Confirm", JOptionPane.YES_NO_OPTION);
        if (exit_answer == 0) {
            LoginForm lf = new LoginForm();
            lf.setVisible(true);
            this.dispose();
        }
    }//GEN-LAST:event_hm_logoutActionPerformed

    private void hm_actionsMenuSelected(javax.swing.event.MenuEvent evt) {//GEN-FIRST:event_hm_actionsMenuSelected
        // TODO add your handling code here:
    }//GEN-LAST:event_hm_actionsMenuSelected

    private void hm_actionsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_hm_actionsMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_hm_actionsMouseClicked

    private void hm_home_itemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hm_home_itemActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_hm_home_itemActionPerformed

    private void hm_home_itemMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_hm_home_itemMouseClicked
        // TODO add your handling code here:
        int exit_answer = JOptionPane.showConfirmDialog(this, "Are you sure to clear message and go to home? ",
                "Confirm", JOptionPane.YES_NO_OPTION);
        if (exit_answer == 0) {
            String[] args = {hm_uid, hm_fn};
            HomeForm.main(args);
            this.dispose();
        }


    }//GEN-LAST:event_hm_home_itemMouseClicked

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        // TODO add your handling code here:
        smf_sender.setText(hm_uid);
    }//GEN-LAST:event_formWindowOpened

    //check whether user exist
    private boolean checkUserExists(String email) {
        try {
            ConnectDB connDB = new ConnectDB();
            String users_tbl = connDB.USERS_TABLE;
            Connection conn = connDB.getConnection();
            String query = "SELECT * FROM " + users_tbl + " WHERE email = ?";
            PreparedStatement ps = conn.prepareStatement(query);
            ps.setString(1, email);
            ResultSet rs = ps.executeQuery();
            conn.close();
            return rs.next();
        } catch (Exception ex) {
            System.out.println(ex.getMessage());
        }
        return false;
    }

    private void jButton1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton1MouseClicked
        // TODO add your handling code here:
        SimpleDateFormat sdf1 = new SimpleDateFormat("yyyyMMddHHmmss");
        SimpleDateFormat sdf2 = new SimpleDateFormat("dd MMM yyyy HH:mm:ss");

        String msg_id = "msg-" + sdf1.format(new Date());
        String reciever = smf_rcv.getText();
        String message = smf_message.getText();
        String sent_date = sdf2.format(new Date());

        //check whether address and message is empty
        if (!"".equals(reciever.trim()) && !"".equals(message.trim())) {
            //check whether or not, reciever exist
            if (checkUserExists(reciever)) {
                try {
                    //Encrypt Message
                    AlgorithmAES aes = new AlgorithmAES(message);
                    String[] encrypted = aes.encryptMessage();
                    String new_message = encrypted[0];
                    String secret_key = encrypted[1];

                    //Send Message
                    ConnectDB connDB = new ConnectDB();
                    String msg_tbl = connDB.MESSAGES_TABLE;
                    Connection conn = connDB.getConnection();
                    String query = "INSERT INTO " + msg_tbl + " VALUES(?,?,?,?,?,?,?,?)";
                    PreparedStatement ps = conn.prepareStatement(query);
                    ps.setString(1, msg_id);
                    ps.setString(2, new_message);
                    ps.setString(3, hm_uid);
                    ps.setString(4, reciever);
                    ps.setString(5, "unread");
                    ps.setString(6, "locked");
                    ps.setString(7, sent_date);
                    ps.setString(8, secret_key);
                    int res = ps.executeUpdate();
                    conn.close();

                    //comfirm send
                    if (res > 0) {
                        String err_msg = "Message sent successfully. \n";
                        JOptionPane.showMessageDialog(this, err_msg, "Success", JOptionPane.INFORMATION_MESSAGE);

                        //go to home
                        String[] args = {hm_uid, hm_fn};
                        HomeForm.main(args);
                        this.dispose();
                    } else {
                        String err_msg = "Operation failed, please comtact system administrator!";
                        JOptionPane.showMessageDialog(this, err_msg, "Error", JOptionPane.ERROR_MESSAGE);
                    }
                } catch (Exception ex) {
                    System.out.println(ex.getMessage());
                }
            } else {
                String err_msg = "The reciever is not a registered user!";
                JOptionPane.showMessageDialog(this, err_msg, "Error", JOptionPane.ERROR_MESSAGE);
            }
        } else {
            String err_msg = "Empty field detected, please fill all fields!";
            JOptionPane.showMessageDialog(this, err_msg, "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jButton1MouseClicked

    private void hm_view_msgActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hm_view_msgActionPerformed
        // TODO add your handling code here:
        int exit_answer = JOptionPane.showConfirmDialog(this, "Are you sure to clear message and go to your message inbox? ",
                "Confirm", JOptionPane.YES_NO_OPTION);
        if (exit_answer == 0) {
            String[] args = {hm_uid, hm_fn};
            InboxMessages.main(args);
            this.dispose();
        }
    }//GEN-LAST:event_hm_view_msgActionPerformed

    private void hm_view_msg2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hm_view_msg2ActionPerformed
        // TODO add your handling code here:
        int exit_answer = JOptionPane.showConfirmDialog(this, "Are you sure to clear message and go to your message outbox? ",
                "Confirm", JOptionPane.YES_NO_OPTION);
        if (exit_answer == 0) {
            String[] args = {hm_uid, hm_fn};
            OutboxMessages.main(args);
            this.dispose();
        }
    }//GEN-LAST:event_hm_view_msg2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SendMessageForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SendMessageForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SendMessageForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SendMessageForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SendMessageForm(args[1], args[0]).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenu hm_actions;
    private javax.swing.JMenu hm_home_item;
    private javax.swing.JMenuItem hm_logout;
    private javax.swing.JMenu hm_msg_menu;
    private javax.swing.JMenuItem hm_send_msg;
    private javax.swing.JMenuItem hm_view_msg;
    private javax.swing.JMenuItem hm_view_msg2;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextPane smf_message;
    private javax.swing.JTextField smf_rcv;
    private javax.swing.JTextField smf_sender;
    // End of variables declaration//GEN-END:variables
}
